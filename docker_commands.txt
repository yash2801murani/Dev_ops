

## üê≥ **Docker Basics**

| Command          | Description                                                                       |
| ---------------- | --------------------------------------------------------------------------------- |
| `docker version` | Show the Docker version installed.                                                |
| `docker info`    | Show detailed info about Docker installation (containers, images, storage, etc.). |
| `docker help`    | List all available Docker commands.                                               |

---

## üì¶ **Image Management**

| Command                             | Description                                                |
| ----------------------------------- | ---------------------------------------------------------- |
| `docker pull <image>`               | Download an image from Docker Hub.                         |
| `docker build -t <name> .`          | Build an image from a Dockerfile in the current directory. |
| `docker images`                     | List all downloaded images.                                |
| `docker rmi <image>`                | Remove an image by name or ID.                             |
| `docker tag <image> <new-name>`     | Tag an image with a new name.                              |
| `docker save -o <file>.tar <image>` | Save an image to a tar archive (for backup/sharing).       |
| `docker load -i <file>.tar`         | Load a Docker image from a tar archive.                    |

---

## üêã **Container Management**

| Command                                 | Description                                       |
| --------------------------------------- | ------------------------------------------------- |
| `docker run <image>`                    | Run a container from an image.                    |
| `docker run -it <image> /bin/bash`      | Run a container with interactive terminal access. |
| `docker run -d <image>`                 | Run a container in detached (background) mode.    |
| `docker ps`                             | List running containers.                          |
| `docker ps -a`                          | List all containers (including stopped ones).     |
| `docker stop <container>`               | Stop a running container.                         |
| `docker start <container>`              | Start a stopped container.                        |
| `docker restart <container>`            | Restart a container.                              |
| `docker rm <container>`                 | Remove a stopped container.                       |
| `docker exec -it <container> /bin/bash` | Run a command inside a running container.         |
| `docker logs <container>`               | Show logs from a container.                       |
| `docker inspect <container>`            | Show low-level details of a container.            |

---

## üìÇ **Volumes & Filesystem**

| Command                                    | Description                        |
| ------------------------------------------ | ---------------------------------- |
| `docker volume create <name>`              | Create a named volume.             |
| `docker volume ls`                         | List volumes.                      |
| `docker volume inspect <name>`             | Inspect volume details.            |
| `docker volume rm <name>`                  | Remove a volume.                   |
| `docker cp <container>:<path> <host-path>` | Copy files from container to host. |
| `docker cp <host-path> <container>:<path>` | Copy files from host to container. |

---

## üåê **Networking**

| Command                                           | Description                            |
| ------------------------------------------------- | -------------------------------------- |
| `docker network ls`                               | List Docker networks.                  |
| `docker network create <name>`                    | Create a custom network.               |
| `docker network inspect <name>`                   | View network details.                  |
| `docker network connect <network> <container>`    | Connect a container to a network.      |
| `docker network disconnect <network> <container>` | Disconnect a container from a network. |

---

## üõ†Ô∏è **Docker Compose**

| Command                                   | Description                                       |
| ----------------------------------------- | ------------------------------------------------- |
| `docker-compose up`                       | Start containers defined in `docker-compose.yml`. |
| `docker-compose up -d`                    | Start in detached mode.                           |
| `docker-compose down`                     | Stop and remove containers/networks/volumes.      |
| `docker-compose build`                    | Build or rebuild services.                        |
| `docker-compose logs`                     | View logs from all services.                      |
| `docker-compose exec <service> <command>` | Run a command in a running service container.     |

---

## ‚öôÔ∏è **Advanced / Misc**

| Command                                | Description                                                 |
| -------------------------------------- | ----------------------------------------------------------- |
| `docker system df`                     | Show disk usage by images, containers, volumes.             |
| `docker system prune`                  | Remove unused containers, images, networks.                 |
| `docker stats`                         | Show live resource usage (CPU, memory, etc.) of containers. |
| `docker login`                         | Authenticate to Docker Hub or a registry.                   |
| `docker logout`                        | Log out from a Docker registry.                             |
| `docker push <image>`                  | Upload an image to Docker Hub.                              |
| `docker export <container> > file.tar` | Export container filesystem to tar archive.                 |
| `docker import file.tar`               | Import a tarball as a Docker image.                         |

